
自动化运维工具Ansible常用模块
	Ansible模块按功能分为：
	云模块、集群模块、 命令模块、数据库模块、文件模块、资产模块、消息模块、监控模块、网络模块、通知模块、包管理模块、源码控制模块、系统模块、单元模块、web设施模块、windows模块
	具体的可以参考官网（http://docs.ansible.com/ansible/latest/list_of_all_modules.html）。
		
	这里从官方分类的模块里选择最常用的一些模块进行介绍。

	1.ping模块
	测试主机的连通性
		# ansible web -m ping
		192.168.8.202 | SUCCESS => {
			"changed": false, 
			"ping": "pong"
		}
		192.168.8.203 | SUCCESS => {
			"changed": false, 
			"ping": "pong"
		}

	2.远程命令模块
		# ansible web -m command -a 'free -m'
		# ansible web -m script -a '/home/test.sh'	//执行ansible服务器上的脚本
		# ansible web -m shell -a '/home/test.sh'	//执行远程主机上的脚本

	3.setup模块
	主要用于获取主机信息，在playbooks里经常会用到的一个参数，gather_facts就与该模块相关
	setup模块下经常使用的一个参数是filter参数
		# ansible web -m setup -a 'filter=ansible_*_mb'	//查看主机内存信息
		# ansible web -m setup -a 'filter=ansible_ens*'	//查看主机网卡信息
		# ansible web -m setup --tree /tmp/facts		//将所有主机的信息输入到/tmp/facts目录下

	4.stat模块
	获取远程文件状态信息,包括atime ctime mtime md5 uid gid等
		# ansible 192.168.8.202 -m stat -a 'path=/etc/sysctl.conf'

	5.file模块
	远程主机上的文件操作,file模块包含如下选项:
		force:强制创建软链接
		group:定义文件的属组
		mode:定义文件的权限
		owner：定义文件的属主
		path：必选项，定义文件的路径
		recurse：递归的设置文件的属性，只对目录有效
		src：要被链接的源文件的路径，只应用于state=link的情况
		dest：被链接到的路径，只应用于state=link的情况 
		state：模块动作
		directory：如果目录不存在，创建目录
		file：即使文件不存在，也不会被创建
		link：创建软链接
		hard：创建硬链接
		touch：如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间
		absent：删除目录、文件或者取消链接文件

	举例：
		在远程主机上创建软连接
		# ansible 192.168.8.202 -m file -a "src=/etc/fstab dest=/tmp/fstab state=link"

		在远程主机指定的目录下创建文件
		# ansible 192.168.8.202 -m file -a "path=/tmp/test.txt state=touch"

		删除远程主机上的文件
		# ansible 192.168.8.202 -m file -a "path=/tmp/test.txt state=absent"

		删除远程主机上的软链接
		#　ansible 192.168.8.202 -m file -a "path=/tmp/fstab state=absent"

	6.copy模块
	实现复制文件到远程主机，copy模块包含如下选项：
		ackup：在覆盖之前将原文件备份，备份文件包含时间信息。有两个选项：yes|no 
		content：用于替代"src",可以直接设定指定文件的值 
		dest：必选项。要将源文件复制到的远程主机的绝对路径，如果源文件是一个目录，那么该路径也必须是个目录 
		directory_mode：递归的设定目录的权限，默认为系统默认权限
		force：如果目标主机包含该文件，但内容不同，如果设置为yes，则强制覆盖，如果为no，则只有当目标主机的目标位置不存在该文件时，才复制。默认为yes
		others：所有的file模块里的选项都可以在这里使用
		src：要复制到远程主机的文件在本地的地址，可以是绝对路径，也可以是相对路径。如果路径是一个目录，它将递归复制。在这种情况下，如果路径使用"/"来结尾，则只复制目录里的内容，如果没有使用"/"来结尾，则包含目录在内的整个内容全部复制，类似于rsync。 
	
	举例：
		拷贝/etc/ansible/script.sh文件到主机组web所有的主机/tmp下并更新文件属主和权限
		#　ansible web -m copy -a "src=/etc/ansible/script.sh dest=/tmp/ owner=appuser group=appuser mode=0755"

	7.service模块
	用于远程主机的服务管理。该模块包含如下选项：
		arguments：给命令行提供一些选项 
		enabled：是否开机启动 yes|no
		name：必选项，服务名称 
		pattern：定义一个模式，如果通过status指令来查看服务的状态时，没有响应，就会通过ps指令在进程中根据该模式进行查找，如果匹配到，则认为该服务依然在运行
		runlevel：运行级别
		sleep：如果执行了restarted，在则stop和start之间沉睡几秒钟
		state：对当前服务执行启动，停止、重启、重新加载等操作（started,stopped,restarted,reloaded）
		user：以哪个用户的身份执行
		
	举例：
		重启远程主机的网络服务
		ansible 192.168.8.201 -m service -a "name=network state=restarted args=ens33"

	8.cron模块
	用于远程主机crontab配置，管理计划任务包含如下选项：
		backup：对远程主机上的原任务计划内容修改之前做备份 
		cron_file：如果指定该选项，则用该文件替换远程主机上的cron.d目录下的用户的任务计划 
		day：日（1-31，*，*/2,……） 
		hour：小时（0-23，*，*/2，……）  
		minute：分钟（0-59，*，*/2，……） 
		month：月（1-12，*，*/2，……） 
		weekday：周（0-7，*，……）
		job：要执行的任务，依赖于state=present 
		name：该任务的描述 
		special_time：指定什么时候执行，参数：reboot,yearly,annually,monthly,weekly,daily,hourly 
		state：确认该任务计划是创建还是删除 
		user：以哪个用户的身份执行
		
	举例：
		# ansible 192.168.8.201 -m cron -a 'name="a job for reboot" special_time=reboot job="/some/job.sh"'
	
	9.yum模块
	Linux平台软件包管理操作 常见的有yum apt 管理方式，其选项有： 
		config_file：yum的配置文件 
		disable_gpg_check：关闭gpg_check 
		disablerepo：不启用某个源 
		enablerepo：启用某个源
		name：要进行操作的软件包的名字，也可以传递一个url或者一个本地的rpm包的路径 
		state：状态（present，absent，latest）
	
	举例：
		# ansible 192.168.8.201 -m yum -a "name=curl state=latest"

	10.user模块
	实现远程主机系统用户管理
		home：指定用户的家目录，需要与createhome配合使用
		groups：指定用户的属组
		uid：指定用的uid
		password：指定用户的密码
		name：指定用户名
		createhome：是否创建家目录 yes|no
		system：是否为系统用户
		remove：当state=absent时，remove=yes则表示连同家目录一起删除，等价于userdel -r
		state：是创建还是删除
		shell：指定用户的shell环境

	举例：
		# ansible 192.168.8.201 -m user -a 'name=www comment=test uid=1001 group=root'

		# ansible 192.168.8.201 -m user -a 'name=www state=absent remove=yes'

	11.rsynchronize模块
	使用rsync同步文件，其参数如下：
		archive: 归档，相当于同时开启recursive(递归)、links、perms、times、owner、group、-D选项都为yes ，默认该项为开启
		checksum: 跳过检测sum值，默认关闭
		compress:是否开启压缩
		copy_links：复制链接文件，默认为no ，注意后面还有一个links参数
		delete: 删除不存在的文件，默认no
		dest：目录路径
		dest_port：默认目录主机上的端口 ，默认是22，走的ssh协议
		dirs：传速目录不进行递归，默认为no，即进行目录递归
		rsync_opts：rsync参数部分
		set_remote_user：主要用于/etc/ansible/hosts中定义或默认使用的用户与rsync使用的用户不同的情况
		mode: push或pull 模块，push模的话，一般用于从本机向远程主机上传文件，pull 模式用于从远程主机上取文件

	举例:
		使用rsynchronize模块首先远程客户端要先按照rsync包才可以使用
		# ansible 192.168.8.201 -a "yum install rsync -y"
		
		远程客户端安装好rsync包后就可以在ansible服务端使用rsync进行同步
		# ansible 192.168.8.201 -m synchronize -a 'src=/etc/ansible/hosts dest=/tmp/ '


	12.mount模块。主要配置挂载点的。主要的参数如下：
		dump
		fstype：必选项，挂载文件的类型 
		name：必选项，挂载点 
		opts：传递给mount命令的参数
		src：必选项，要挂载的文件 
		state：必选项 
		present：只处理fstab中的配置 
		absent：删除挂载点 
		mounted：自动创建挂载点并挂载之 
		umounted：卸载

	举例:
		把本地的磁盘挂载到远程主机上
		# ansible 192.168.8.201 -m mount -a 'name=/mnt src=/dev/sda3 fstype=xfs state=mounted opts=rw'

		下面是查看远程主机是否挂载成功
		# ansible 192.168.8.201 -a 'cat /mnt/etc/fstab'

	13.get_url模块
		该模块主要用于从http，ftp,https等服务器上下载文件类似于wget。
		主要选项如下：
		sha256sum：下载完成后进行sha256 check；
		timeout：下载超时时间，默认10s
		url：下载的URL
		url_password、url_username：主要用于需要用户名密码进行验证的情况
		use_proxy：使用代理，代理需事先在环境变更中定义
	
	举例:
		从网站上下载页面
		# ansible 192.168.8.201 -m get_url -a "url=http://www.baidu.com dest=/tmp/baidu mode=0440 force=yes" 		

	14.sysctl包管理模块
		用于远程主机sysctl的配置。
		选项如下:
		ignoreerrors:使用此选项忽略有关未知键的错误。
		name=                  # 指定键值,使用,分隔多个值
		reload                 # 更新sysctl的配置,有两个值yes|no
		state                  # 条目是否存在
		sysctl_file            # 如果/etc/sysctl.conf不在该位置,可以使用该参数指定
		sysctl_set             # sysctl命令和设置
		value					# 值
	举例:
		打开远程主机内核参数,支持ipv4的路由转发
		# ansible 192.168.8.201 -m sysctl -a "name=net.ipv4.ip_forward value=1 sysctl_file=/usr/lib/sysctl.d/50-default.conf"
		
		查看修改
		# ansible 192.168.8.201 -a 'cat /proc/sys/net/ipv4/ip_forward'

	15.unarchive模块
		功能：解压缩，这个模块有两种用法：
			1、将ansible主机上的压缩包在本地解压缩后传到远程主机上，这种情况下，copy=yes
			2、将远程主机上的某个压缩包解压缩到指定路径下。这种情况下，需要设置copy=no
		具体的参数如下：
			copy：在解压文件之前，是否先将文件复制到远程主机，默认为yes。若为no，则要求目标主机上压缩包必须存在。
			creates：指定一个文件名，当该文件存在时，则解压指令不执行
			dest：远程主机上的一个路径，即文件解压的路径 
			grop：解压后的目录或文件的属组
			list_files：如果为yes，则会列出压缩包里的文件，默认为no，2.0版本新增的选项
			mode：解决后文件的权限
			src：如果copy为yes，则需要指定压缩文件的源路径 
			owner：解压后文件或目录的属主

	举例:
		制作一个tar包		
		# cd /etc
		# tar cf passwd.tar passwd
		将passwd.tar解压到远程主机上
		# ansible 192.168.8.201 -m unarchive -a "src=/tmp/install/zabbix-3.0.4.tar.gz dest=/tmp/ mode=0755"


	以上就是ansible常用的模块，如果还需要其他的模块的话可以查看下官方文档（http://docs.ansible.com/ansible/latest/list_of_all_modules.html） 也可以通过命令来进行查看
		1，查看所有的模块命令： ansible-doc  -l
		2，查看具体某个模块用法：ansible-doc -s MODULE_NAME












